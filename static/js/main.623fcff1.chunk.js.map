{"version":3,"sources":["components/Navigation.js","components/Footer.js","components/Profile.js","components/UserList.js","components/Splash.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","state","email","password","status","show","message","submitLogin","e","_this$state","_this","firebase","signInWithEmailAndPassword","then","setState","changeValTrue","catch","error","errorMessage","createAccount","_this$state2","createUserWithEmailAndPassword","onAuthStateChanged","user","ref","concat","uid","set","dogdates","bio","dogAge","dogBreed","dogName","first","last","loginValue","target","id","value","logOut","signOut","this","changeValFalse","_this2","react_default","a","createElement","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","className","Form","inline","FormControl","type","placeholder","onChange","Button","variant","onClick","Modal","onHide","Header","closeButton","Title","Body","Footer","Link","Component","Profile","firstName","lastName","loaded","storeInfo","Object","defineProperty","updateInfo","currentUser","once","snapshot","val","child","forEach","test","push","Container","Card","src","width","height","alt","Group","controlId","Control","as","rows","UserList","selectedId","loadData","console","log","dogimg","dogTemp","key","_this3","yesData","noData","dog","map","Table","striped","bordered","hover","Splash","Home","uFirst","uLast","uEmail","dogid","isLoadingInfo","isLoadingDog","loadApi","loadDetailsPerson","loadDetailsDog","loadDetailsDname","fetch","response","json","data","results","name","reg","i","length","toLowerCase","Math","floor","random","temperament","info","url","create_UUID","dt","Date","getTime","replace","c","r","toString","yesDogs","randomId","noDogs","_this$state3","Spinner","animation","role","react_router_dom","components_Navigation","react_router","exact","path","render","components_Splash","components_Profile","components_UserList","components_Footer","App","components_Home","Boolean","window","location","hostname","match","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.623fcff1.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport * as firebase from 'firebase';\r\nimport {Navbar, Nav, Form, FormControl, Button, Modal } from 'react-bootstrap'\r\n\r\n\r\nclass Navigation extends Component{\r\n    state={\r\n        email: '',\r\n        password: '',\r\n        status: '',\r\n        show: false,\r\n        message: ''\r\n    }\r\n\r\n\r\n    //Checks for current user if logged in previously\r\n    componentDidMount(){\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if(user){\r\n                this.setState({status: false})\r\n            }\r\n            else{\r\n                this.setState({status: true})\r\n            }\r\n        })\r\n    }\r\n    \r\n    //Checks for correct login\r\n    submitLogin = e =>{ \r\n        const { email, password } = this.state;\r\n    \r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n        .then(()=>{\r\n            this.setState({message: \"Account logged in\"})\r\n            this.changeValTrue();\r\n        })\r\n        .catch(error =>{\r\n            let errorMessage = error.message;\r\n            this.setState({message: errorMessage})\r\n            this.changeValTrue();\r\n          });\r\n    }\r\n    //Creates account based on details submited and matches it with users on database to see if they exist\r\n    createAccount = e =>{\r\n    const { email, password, message } = this.state;\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(email, password)\r\n    .then(()=>{\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            firebase.database().ref(`users/${user.uid}`).set({\r\n                dogdates: ' ',\r\n                bio: 'Enter dog bio here',\r\n                dogAge: 'Age of dog',\r\n                dogBreed: 'Breed of dog',\r\n                dogName: 'Dogs name',\r\n                first: 'Your first name',\r\n                last: 'your Last name'\r\n            })\r\n            \r\n        })\r\n        this.setState({message: \"Account Created\"})\r\n        this.changeValTrue();\r\n    })\r\n    .catch(error=>{\r\n        let errorMessage = error.message;\r\n        this.setState({message: errorMessage})\r\n        this.changeValTrue();\r\n        });\r\n    }\r\n    //Gathers values to be collected for submit\r\n    loginValue = e =>{\r\n    if(e.target.id === 'email'){\r\n        this.setState({email: e.target.value})\r\n    }\r\n    else{\r\n        this.setState({password: e.target.value})\r\n    } \r\n    }\r\n    //logs out current user.\r\n    logOut = e =>{\r\n    firebase.auth().signOut().then(function() {\r\n        this.setState({message: 'Succesful Logout'})\r\n        this.changeValTrue();\r\n        }).catch(function(error) {\r\n        });\r\n    }\r\n    changeValTrue = () =>{this.setState({show:true})}\r\n    changeValFalse= () =>{this.setState({show:false})}\r\n\r\n  render(){\r\n      //If logged in will change navbar\r\n    const {status} = this.state;\r\n    if(status){\r\n        return(\r\n            <Navbar bg=\"light\" expand=\"lg\">\r\n                <Navbar.Brand href=\"#home\">Paw Pals</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto justify-content-end\">\r\n                        </Nav>\r\n                        <Form inline>\r\n                            <FormControl type=\"email\" placeholder=\"Email\" className=\"mr-sm-2\" id=\"email\" onChange={this.loginValue}/>\r\n                            <FormControl type=\"password\" placeholder=\"Password\" className=\"mr-sm-2\" id=\"password\" onChange={this.loginValue}/>\r\n                            <Button variant=\"outline-success\" onClick={this.submitLogin}>Login</Button>\r\n                            <Button variant=\"outline-success\" onClick={this.createAccount}>Sign Up</Button>\r\n                        </Form>\r\n                </Navbar.Collapse>\r\n                <Modal show={this.state.show} onHide={this.changeValFalse}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Notification</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>{this.state.message}</Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"primary\"  onClick={this.changeValFalse}>\r\n                        Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>  \r\n            </Navbar>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <Navbar bg=\"light\" expand=\"lg\">\r\n                <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>   \r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto justify-content-end\">\r\n                        <Nav.Link href=\"/\">Home</Nav.Link>\r\n                        <Nav.Link href=\"#/profile\">Profile</Nav.Link>\r\n                        <Nav.Link href=\"#/matches\">Matches</Nav.Link>\r\n                        </Nav>\r\n                        <Nav.Link href=\"/\"><Button variant=\"outline-success\" onClick={this.logOut}>Logout</Button></Nav.Link>\r\n                        <Modal show={this.state.show} onHide={this.changeValFalse}>\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title>Notification</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>{this.state.message}</Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"primary\"  onClick={this.changeValFalse}>\r\n                                Close\r\n                                </Button>\r\n                            </Modal.Footer>\r\n                        </Modal>              \r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        )\r\n    }\r\n   }\r\n}\r\n\r\nexport default Navigation;\r\n\r\n","import React, {Component} from 'react';\r\n\r\nclass Footer extends Component{\r\n  //Set up deeper levels of states to store data\r\n\r\n\r\n  render(){\r\n    return(\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n   }\r\n}\r\n\r\nexport default Footer;\r\n","import React, {Component} from 'react';\r\nimport {Card, Container, Form, Table,Button,Modal} from 'react-bootstrap'\r\nimport * as firebase from 'firebase';\r\n\r\n\r\n\r\n\r\n\r\nclass Profile extends Component{\r\n    state={\r\n        email:'',\r\n        dogName:'',\r\n        dogBreed:'',\r\n        dogAge:'',\r\n        firstName:'',\r\n        lastName:'',\r\n        bio:'',\r\n        dogdates:[],\r\n        loaded:false\r\n    }\r\n\r\n    componentDidMount(){\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            this.setState({email: user.email})\r\n            firebase.database().ref('/users/' + user.uid).once('value').then((snapshot)=>{\r\n                this.setState({\r\n                    dogName: snapshot.val().dogName, \r\n                    dogAge: snapshot.val().dogAge, \r\n                    dogBreed: snapshot.val().dogBreed, \r\n                    firstName: snapshot.val().first, \r\n                    lastName: snapshot.val().last, \r\n                    bio: snapshot.val().bio,\r\n                })\r\n                snapshot.child('dogdates').forEach(test=>{\r\n                    this.state.dogdates.push(test.val())\r\n                })\r\n                this.setState({loaded: true})\r\n            });\r\n        })\r\n    }\r\n    storeInfo = e =>{\r\n        this.setState({[e.target.id]: e.target.value})\r\n    }\r\n    updateInfo = e =>{\r\n        const {dogName, dogAge, dogBreed, firstName, lastName, bio} = this.state\r\n        let user = firebase.auth().currentUser;\r\n        firebase.database().ref('/users/' + user.uid).once('value').then((snapshot)=>{\r\n            if (user != null) {\r\n                firebase.database().ref(`users/${user.uid}`).set({\r\n                    dogdates: snapshot.val().dogdates,\r\n                    bio: bio,\r\n                    dogAge: dogAge,\r\n                    dogBreed: dogBreed,\r\n                    dogName: dogName,\r\n                    first: firstName,\r\n                    last: lastName\r\n                })\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    render(){\r\n        const {dogName, dogAge, dogBreed, firstName, lastName, bio} = this.state\r\n\r\n\r\n        return(\r\n            <Container>\r\n                <Card>\r\n                    <Card.Body> \r\n                        <img src=\"https://pawedin.com/system/pets/default_images/default_pet.jpg\" width=\"200\" height=\"200\" alt=\"placeholder\"></img>                 \r\n                    <Form>\r\n                        <Form.Group controlId=\"dogName\">\r\n                            <Form.Control type=\"text\" value={dogName} onChange={this.storeInfo} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"dogBreed\">\r\n                            <Form.Control type=\"text\" value={dogBreed} onChange={this.storeInfo}/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"dogAge\">\r\n                            <Form.Control type=\"text\" value={dogAge} onChange={this.storeInfo}/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"firstName\">\r\n                            <Form.Control type=\"text\" value={firstName} onChange={this.storeInfo}/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"lastName\">\r\n                            <Form.Control type=\"text\" value={lastName} onChange={this.storeInfo}/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"bio\">\r\n                            <Form.Control as=\"textarea\" rows=\"3\" value={bio} onChange={this.storeInfo}/>\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"button\" onClick={this.updateInfo}>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n                \r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile;\r\n\r\n","import React, {Component} from 'react';\r\nimport {Container, Table, Modal, Button} from 'react-bootstrap'\r\nimport * as firebase from 'firebase';\r\n\r\n\r\nclass UserList extends Component{\r\n    state={\r\n        dogdates:[],\r\n        loaded:false,\r\n        selectedId: '',\r\n        show: false\r\n    }\r\n    //Loading data to be used in table\r\n  componentDidMount(){\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n        this.setState({email: user.email})\r\n        firebase.database().ref('/users/' + user.uid).once('value').then((snapshot)=>{\r\n            //Sets up object and puts data along with key\r\n            snapshot.child('dogdates').forEach(test=>{\r\n                this.state.dogdates.push({\r\n                    dogAge: test.val().dogAge,\r\n                    dogBreed: test.val().dogBreed,\r\n                    dogName: test.val().dogName,\r\n                    dogimg: test.val().dogimg,\r\n                    dogTemp: test.val().dogTemp,\r\n                    email: test.val().email,\r\n                    first: test.val().first,\r\n                    last: test.val().last,\r\n                    status: test.val().status,\r\n                    id: test.key\r\n                })\r\n            })\r\n            this.setState({loaded: true})\r\n        });\r\n    })\r\n  }\r\n\r\n  loadData = e =>{\r\n      console.log(e.target)\r\n    this.setState({selectedId: e.target.id})\r\n    this.changeValTrue()\r\n  }\r\n  changeValTrue = () =>{this.setState({show:true})}\r\n  changeValFalse= () =>{this.setState({show:false})}\r\n\r\n  render(){\r\n    const {dogdates, loaded, selectedId} = this.state\r\n    let yesData = [];\r\n    let noData = [];\r\n\r\n\r\n    if(loaded){\r\n        dogdates.forEach(dog=>{\r\n            if(dog.status === 'yes'){\r\n                yesData.push(dog)\r\n            }\r\n            else if(dog.status === 'no'){\r\n                noData.push(dog)\r\n            }\r\n        })\r\n    }    \r\n    return(\r\n        <Container>\r\n            <Modal show={this.state.show} onHide={this.changeValFalse}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Notification</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {dogdates.map(dog=>{\r\n                        console.log(dog)\r\n                        if(dog.id === selectedId){\r\n                            console.log(dog)\r\n                            return(\r\n                                <div key=\"modal\">\r\n                                    <img src={dog.dogimg} alt=\"Dog Img\" height=\"200\" width=\"200\"></img>\r\n                                    <p>{dog.dogName}</p>\r\n                                    <p>{dog.dogAge}</p>\r\n                                    <p>{dog.dogBreed}</p>\r\n                                    <p>{dog.email}</p>\r\n                                    <p>{dog.first}</p>\r\n                                    <p>{dog.last}</p>\r\n                                    <p>Hello my name is {dog.dogName} and I am {dog.dogTemp}.\r\n                                    My owner is called {dog.first} {dog.last}. I hope I can get\r\n                                    To be your friend today!\r\n                                    </p>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    })}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\"  onClick={this.changeValFalse}>\r\n                    Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>  \r\n            <Container>           \r\n            <h2>Play Date Friends</h2>         \r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Dog</th>\r\n                            <th>Owner</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {yesData.map(dog=>{\r\n                    return(\r\n                        <tr key={dog.first + dog.last} >\r\n                            <td><Button id={dog.id} onClick={this.loadData}>View Profile</Button>{dog.dogName}</td>\r\n                            <td>{dog.first} {dog.last}</td>\r\n                        </tr>\r\n                    )\r\n                    })}\r\n                    </tbody>\r\n                </Table>\r\n            </Container>\r\n            <Container>\r\n            <h2>Maybe Play Dates</h2>                    \r\n                    <Table striped bordered hover>\r\n                        <thead>\r\n                            <tr>\r\n                            <th>Dog</th>\r\n                            <th>Owner</th>\r\n                         </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {noData.map(dog=>{\r\n                        return(\r\n                        <tr key={dog.first + dog.last} id={dog.id}>\r\n                            <td><Button id={dog.id} onClick={this.loadData}>View Profile</Button>{dog.dogName}</td>\r\n                            <td>{dog.first} {dog.last}</td>\r\n                        </tr>\r\n                        )\r\n                        })}\r\n                        </tbody>\r\n                    </Table>\r\n            </Container>\r\n        </Container>\r\n    )\r\n   }\r\n}\r\n\r\nexport default UserList;\r\n","import React, {Component} from 'react';\r\nimport {Card, Container, Form, FormControl, Button, Modal} from 'react-bootstrap'\r\n\r\nclass Splash extends Component{\r\n  //Set up deeper levels of states to store data\r\n  state={\r\n    email: '',\r\n    password: '',\r\n    status: '',\r\n    show: false,\r\n    message: ''\r\n}\r\n\r\n\r\n  render(){\r\n    return(\r\n        <div>\r\n            <Container>\r\n                Welcoem to paw pals! Sign up here!\r\n            </Container>\r\n            <Container>\r\n                <Card>\r\n                <Form inline>\r\n                <FormControl type=\"email\" placeholder=\"Email\" className=\"mr-sm-2\" id=\"email\" onChange={this.loginValue}/>\r\n                <FormControl type=\"password\" placeholder=\"Password\" className=\"mr-sm-2\" id=\"password\" onChange={this.loginValue}/>\r\n                <FormControl type=\"password\" placeholder=\"Type Password Again\" className=\"mr-sm-2\" id=\"password2\" onChange={this.loginValue}/>\r\n                <Button variant=\"outline-success\" onClick={this.submitLogin}>Login</Button>\r\n                <Button variant=\"outline-success\" onClick={this.createAccount}>Sign Up</Button>\r\n                </Form>\r\n                </Card>\r\n            </Container>\r\n        </div>\r\n    )\r\n   }\r\n}\r\n\r\nexport default Splash;\r\n","import React, { Component } from 'react';\r\nimport * as firebase from 'firebase';\r\nimport {Card, Container, Spinner} from 'react-bootstrap'\r\nimport { HashRouter, Route} from 'react-router-dom'\r\nimport Navigation from './Navigation'\r\nimport Footer from './Footer'\r\nimport Profile from './Profile';\r\nimport UserList from './UserList'\r\nimport Splash from './Splash'\r\nimport { stat } from 'fs';\r\nclass Home  extends Component {\r\n    \r\n  state ={\r\n    uFirst: '',\r\n    uLast: '',\r\n    uEmail: '',\r\n    dogAge: '',\r\n    dogBreed: '',\r\n    dogName: '',\r\n    dogTemp:'',\r\n    dogid: '',\r\n    dogimg: null,\r\n    isLoadingInfo: false,\r\n    isLoadingDog: false,\r\n    status:''\r\n    }\r\n    componentDidMount(){\r\n      firebase.auth().onAuthStateChanged((user) => {\r\n        if(user){\r\n            this.setState({status: false})\r\n        }\r\n        else{\r\n            this.setState({status: true})\r\n        }\r\n    })\r\n    }\r\n\r\n  // Loads all current api details\r\n  loadApi = e =>{\r\n    if(this.state.isLoadingInfo === false && this.state.isLoadingDog === false){\r\n      this.loadDetailsPerson();\r\n     }\r\n    else if(this.state.isLoadingInfo === true && this.state.isLoadingDog === false){\r\n      this.loadDetailsDog();\r\n    }\r\n  }\r\n\r\n  loadDetailsDname = e =>{\r\n    fetch('https://randomuser.me/api/')\r\n    .then(response => { return response.json() })\r\n    .then(data => {\r\n      let reg =/^[a-zA-Z]+$/;\r\n      if(!reg.test(data.results[0].name.first)){\r\n        this.loadDetailsDname();\r\n      }\r\n      else{\r\n        this.setState({dogName : data.results[0].name.first})\r\n      }\r\n    })\r\n  }\r\n\r\n  loadDetailsPerson = e =>{\r\n    fetch('https://randomuser.me/api/')\r\n    .then(response => { return response.json() })\r\n    .then(data => {\r\n      let reg =/^[a-zA-Z]+$/;\r\n      if(!reg.test(data.results[0].name.first) || !reg.test(data.results[0].name.last)){\r\n        this.loadDetailsPerson();\r\n      }\r\n      else{\r\n        this.setState({uFirst : data.results[0].name.first, uLast : data.results[0].name.last, uEmail : data.results[0].email, isLoadingInfo: true}) \r\n        this.loadDetailsDname();\r\n      }\r\n    })\r\n  }\r\n\r\n  loadDetailsDog = e =>{\r\n    fetch(`https://api.thedogapi.com/v1/breeds/search?q=${this.state.uFirst[0]}`)\r\n    .then(response => { return response.json() })\r\n    .then(data => {\r\n      for (let i = 0; i < data.length; i++) {  \r\n        if(data[i].name[0].toLowerCase() === this.state.uFirst[0].toLowerCase()){\r\n          this.setState({dogBreed : data[i].name, isLoadingDog: true})\r\n          this.setState({dogAge: Math.floor(Math.random() * 10 + 1)})\r\n          this.setState({dogid: data[i].id})\r\n          this.setState({dogTemp: data[i].temperament})\r\n          if(typeof data[i].temperament === 'undefined'){\r\n            this.setState({dogTemp: \"Happy, Loving, Kind\"});\r\n          }\r\n          if(this.state.dogimg === null){\r\n\r\n            fetch(`https://api.thedogapi.com/v1/images/search?breed_ids=${this.state.dogid}`)\r\n            .then(response => { return response.json() })\r\n            .then(info =>{\r\n              if(info.length === 0){\r\n                this.setState({dogimg: \"https://pawedin.com/system/pets/default_images/default_pet.jpg\"})\r\n              }\r\n              else{\r\n                this.setState({dogimg: info[0].url})\r\n              }\r\n            })\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  //Random id for random users being stored\r\n  create_UUID = e =>{\r\n    var dt = new Date().getTime();\r\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n        var r = (dt + Math.random()*16)%16 | 0;\r\n        dt = Math.floor(dt/16);\r\n        return (c==='x' ? r :(r&0x3|0x8)).toString(16);\r\n    });\r\n    return uuid;\r\n  \r\n  }\r\n\r\n  //Add dogs to list to be view on profile later\r\n  yesDogs = e =>{\r\n    let randomId = this.create_UUID();\r\n    let {uEmail, uFirst, uLast, dogAge, dogBreed, dogName, dogimg, dogTemp } = this.state\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n          if (user) {\r\n                firebase.database().ref(`users/${user.uid}/dogdates/${randomId}`).set({\r\n            dogAge: dogAge,\r\n            dogBreed: dogBreed,\r\n            dogName: dogName,\r\n            dogimg: dogimg,\r\n            dogTemp: dogTemp,\r\n            email: uEmail,\r\n            first: uFirst,\r\n            last: uLast,\r\n            status: 'yes',\r\n          }); \r\n        }\r\n      });\r\n      this.setState({isLoadingDog: false, isLoadingInfo: false, dogimg: null})\r\n      this.loadApi();\r\n  }\r\n  noDogs = e =>{\r\n    let randomId = this.create_UUID();\r\n    let {uEmail, uFirst, uLast, dogAge, dogBreed, dogName, dogimg, dogTemp } = this.state\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n          if (user) {\r\n                firebase.database().ref(`users/${user.uid}/dogdates/${randomId}`).set({\r\n            dogAge: dogAge,\r\n            dogBreed: dogBreed,\r\n            dogName: dogName,\r\n            dogimg: dogimg,\r\n            dogTemp: dogTemp,\r\n            email: uEmail,\r\n            first: uFirst,\r\n            last: uLast,\r\n            status: 'no',\r\n          }); \r\n        }\r\n      });\r\n      this.setState({isLoadingDog: false, isLoadingInfo: false, dogimg: null})\r\n      this.loadApi();\r\n  }\r\n  //store more than 1 user to load data, holder user data in set state along with details of dog you will be viewing\r\n \r\n    render(){\r\n        let { isLoadingInfo, isLoadingDog, uEmail, uFirst, uLast, dogAge, dogBreed, dogName, dogimg, dogTemp, status } = this.state\r\n\r\n        if(isLoadingDog === false || isLoadingInfo === false ){\r\n          this.loadApi();\r\n        }\r\n    \r\n        if(isLoadingDog === false || isLoadingInfo === false ){\r\n          return( \r\n          <Container>\r\n            <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n          </Spinner>\r\n        </Container>\r\n        )\r\n        }\r\n        else if(isLoadingDog === true && isLoadingInfo === true){\r\n          return(\r\n            <HashRouter>\r\n              <Navigation/>\r\n              <Route exact path=\"/\" render={()=>{\r\n                if(status){\r\n                  return(\r\n                    <Splash/>\r\n                  )\r\n                }\r\n                else{\r\n                  return(\r\n                    <Container>\r\n                      <Card>\r\n                        <Card.Body>                  \r\n                          <img src={dogimg} alt=\"Dog Img\" height=\"200\" width=\"200\"></img>\r\n                          <p id=\"\">{dogBreed}</p>\r\n                          <p id=\"\">{dogAge}</p>\r\n                          <p>Hello my name is {dogName} and I am {dogTemp}.</p>\r\n                          <p>My owner is called {uFirst} {uLast}.</p>\r\n                          <p>You can contact my owner at {uEmail}.</p>\r\n                          <button onClick={this.yesDogs}>Playdate</button>\r\n                          <button onClick={this.noDogs}>No Thanks</button>\r\n                          </Card.Body>\r\n                      </Card>              \r\n                    </Container>\r\n                    )\r\n                }\r\n              }}/>\r\n              <Route path=\"/profile\" render={()=>{\r\n                return(\r\n                  <Profile/>\r\n\r\n                )\r\n              }}/>\r\n              <Route path=\"/matches\" render={()=>{\r\n                return(\r\n                  <UserList/>\r\n                )\r\n              }}/>\r\n              <Footer/>\r\n              </HashRouter>\r\n          );\r\n        }  \r\n    }\r\n\r\n}\r\n\r\nexport default Home\r\n\r\n","import React, {Component} from 'react';\nimport Home from './components/Home'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\n\n\nclass App extends Component{\n\n\n  render(){\n    return(\n      <div>\n      <Home/>\n      </div>\n    )\n   }\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as firebase from 'firebase';\nimport * as serviceWorker from './serviceWorker';\n\nconst config = {\n    apiKey: \"AIzaSyD2bxg_sJcq3m625n7tDHAp_nkMjGtUdOw\",\n    authDomain: \"dogdata-3200f.firebaseapp.com\",\n    databaseURL: \"https://dogdata-3200f.firebaseio.com\",\n    projectId: \"dogdata-3200f\",\n    storageBucket: \"dogdata-3200f.appspot.com\",\n    messagingSenderId: \"1085718428729\",\n    appId: \"1:1085718428729:web:b95fef7c3f7b8e31\"\n  };\n\nfirebase.initializeApp(config)\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}