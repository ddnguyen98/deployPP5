{"version":3,"sources":["components/Navigation.js","components/Footer.js","components/Profile.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","state","email","password","status","show","submitLogin","e","_this$state","_this","firebase","signInWithEmailAndPassword","then","catch","error","errorCode","code","errorMessage","message","console","log","createAccount","_this$state2","createUserWithEmailAndPassword","onAuthStateChanged","user","ref","concat","uid","set","dogdates","bio","dogAge","dogBreed","dogName","first","last","loginValue","target","id","setState","value","logOut","signOut","changVal","_this2","this","react_default","a","createElement","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","className","Link","Form","inline","FormControl","type","placeholder","onChange","Button","variant","onClick","Modal","Header","closeButton","Title","Body","Footer","Component","Profile","firstName","lastName","loaded","storeInfo","Object","defineProperty","updateInfo","currentUser","once","snapshot","val","child","forEach","test","push","yesData","noData","dog","Container","Card","src","width","height","alt","Group","controlId","Control","as","rows","Table","striped","bordered","hover","map","key","Home","uFirst","uLast","uEmail","dogTemp","dogid","dogimg","isLoadingInfo","isLoadingDog","loadApi","loadDetailsPerson","loadDetailsDog","loadDetailsDname","fetch","response","json","data","results","name","reg","i","length","toLowerCase","Math","floor","random","temperament","info","url","create_UUID","dt","Date","getTime","replace","c","r","toString","yesDogs","randomId","dogImage","noDogs","Spinner","animation","role","react_router_dom","components_Navigation","react_router","exact","path","render","components_Profile","components_Footer","App","components_Home","Boolean","window","location","hostname","match","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c1f7833a.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport * as firebase from 'firebase';\r\nimport {Navbar, Nav, Form, FormControl, Button, Modal } from 'react-bootstrap'\r\n\r\n\r\nclass Navigation extends Component{\r\n    state={\r\n        email: '',\r\n        password: '',\r\n        status: '',\r\n        show: false\r\n    }\r\n\r\n\r\n    //Checks for current user if logged in previously\r\n    componentDidMount(){\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if(user){\r\n                this.setState({status: false})\r\n            }\r\n            else{\r\n                this.setState({status: true})\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n    \r\n    //Checks for correct login\r\n    submitLogin = e =>{ \r\n        const { email, password } = this.state;\r\n    \r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n        .then(function(){})\r\n        .catch(function(error) {\r\n            let errorCode = error.code;\r\n            let errorMessage = error.message;\r\n            console.log(errorCode)\r\n            console.log(errorMessage);\r\n          });\r\n    }\r\n    //Creates account based on details submited and matches it with users on database to see if they exist\r\n    createAccount = e =>{\r\n    const { email, password } = this.state;\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(email, password)\r\n    .then(function(){\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            firebase.database().ref(`users/${user.uid}`).set({\r\n                dogdates: ' ',\r\n                bio: 'Enter dog bio here',\r\n                dogAge: 'Age of dog',\r\n                dogBreed: 'Breed of dog',\r\n                dogName: 'Dogs name',\r\n                first: 'Your first name',\r\n                last: 'your Last name'\r\n                })\r\n        })\r\n    })\r\n    .catch(function(error) {\r\n        let errorCode = error.code;\r\n        let errorMessage = error.message;\r\n        console.log(errorCode)\r\n        console.log(errorMessage);\r\n        });\r\n    }\r\n    //Gathers values to be collected for submit\r\n    loginValue = e =>{\r\n\r\n    if(e.target.id === 'email'){\r\n        this.setState({email: e.target.value})\r\n    }\r\n    else{\r\n        this.setState({password: e.target.value})\r\n    } \r\n    }\r\n    //logs out current user.\r\n    logOut = e =>{\r\n    firebase.auth().signOut().then(function() {\r\n        }).catch(function(error) {\r\n        });\r\n    }\r\n    changVal = () =>{this.setState({show:true})}\r\n\r\n  render(){\r\n      //If logged in will change navbar\r\n    const {status} = this.state;\r\n    if(status){\r\n        return(\r\n            <Navbar bg=\"light\" expand=\"lg\">\r\n                <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto justify-content-end\">\r\n                        <Nav.Link href=\"/\">Home</Nav.Link>\r\n                        </Nav>\r\n                        <Form inline>\r\n                            <FormControl type=\"email\" placeholder=\"Email\" className=\"mr-sm-2\" id=\"email\" onChange={this.loginValue}/>\r\n                            <FormControl type=\"password\" placeholder=\"Password\" className=\"mr-sm-2\" id=\"password\" onChange={this.loginValue}/>\r\n                            <Button variant=\"outline-success\" onClick={this.submitLogin}>Login</Button>\r\n                            <Button variant=\"outline-success\" onClick={this.createAccount}>Sign Up</Button>\r\n                        </Form>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <Navbar bg=\"light\" expand=\"lg\">\r\n                <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>   \r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto justify-content-end\">\r\n                        <Nav.Link href=\"/\">Home</Nav.Link>\r\n                        <Nav.Link href=\"#/profile\">Profile</Nav.Link>\r\n                        <Nav.Link href=\"#/message\">Message</Nav.Link>\r\n                        </Nav>\r\n                        <Nav.Link href=\"/\"><Button variant=\"outline-success\" onClick={this.logOut}>Logout</Button></Nav.Link>\r\n                        <Button onClick={this.changVal}>Test</Button>\r\n                        <Modal show={this.state.show} >\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title>Modal heading</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"secondary\">\r\n                                Close\r\n                                </Button>\r\n                                <Button variant=\"primary\">\r\n                                Save Changes\r\n                                </Button>\r\n                            </Modal.Footer>\r\n                        </Modal>              \r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        )\r\n    }\r\n   }\r\n}\r\n\r\nexport default Navigation;\r\n\r\n","import React, {Component} from 'react';\r\n\r\nclass Footer extends Component{\r\n  //Set up deeper levels of states to store data\r\n\r\n\r\n  render(){\r\n    return(\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n   }\r\n}\r\n\r\nexport default Footer;\r\n","import React, {Component} from 'react';\r\nimport {Card, Container, Form, Table,Button,Modal} from 'react-bootstrap'\r\nimport * as firebase from 'firebase';\r\n\r\n\r\n\r\n\r\n\r\nclass Profile extends Component{\r\n    state={\r\n        email:'',\r\n        dogName:'',\r\n        dogBreed:'',\r\n        dogAge:'',\r\n        firstName:'',\r\n        lastName:'',\r\n        bio:'',\r\n        dogdates:[],\r\n        loaded:false\r\n    }\r\n\r\n    componentDidMount(){\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            this.setState({email: user.email})\r\n            firebase.database().ref('/users/' + user.uid).once('value').then((snapshot)=>{\r\n                this.setState({\r\n                    dogName: snapshot.val().dogName, \r\n                    dogAge: snapshot.val().dogAge, \r\n                    dogBreed: snapshot.val().dogBreed, \r\n                    firstName: snapshot.val().first, \r\n                    lastName: snapshot.val().last, \r\n                    bio: snapshot.val().bio,\r\n                })\r\n                snapshot.child('dogdates').forEach(test=>{\r\n                    this.state.dogdates.push(test.val())\r\n                })\r\n                this.setState({loaded: true})\r\n            });\r\n        })\r\n    }\r\n    storeInfo = e =>{\r\n        this.setState({[e.target.id]: e.target.value})\r\n    }\r\n    updateInfo = e =>{\r\n        const {dogName, dogAge, dogBreed, firstName, lastName, bio} = this.state\r\n        let user = firebase.auth().currentUser;\r\n        firebase.database().ref('/users/' + user.uid).once('value').then((snapshot)=>{\r\n            if (user != null) {\r\n                firebase.database().ref(`users/${user.uid}`).set({\r\n                    dogdates: snapshot.val().dogdates,\r\n                    bio: bio,\r\n                    dogAge: dogAge,\r\n                    dogBreed: dogBreed,\r\n                    dogName: dogName,\r\n                    first: firstName,\r\n                    last: lastName\r\n                })\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    render(){\r\n        const {dogName, dogAge, dogBreed, firstName, lastName, bio, loaded, dogdates} = this.state\r\n        let yesData = [];\r\n        let noData = [];\r\n\r\n\r\n        if(loaded){\r\n            dogdates.forEach(dog=>{\r\n                if(dog.status === 'yes'){\r\n                    yesData.push(dog)\r\n                }\r\n                else if(dog.status === 'no'){\r\n                    noData.push(dog)\r\n                }\r\n            })\r\n        }\r\n\r\n        return(\r\n            <Container>\r\n                \r\n                <Card>\r\n                    <Card.Body> \r\n                        <img src=\"https://pawedin.com/system/pets/default_images/default_pet.jpg\" width=\"200\" height=\"200\" alt=\"placeholder\"></img>                 \r\n                    <Form>\r\n                        <Form.Group controlId=\"dogName\">\r\n                            <Form.Control type=\"text\" value={dogName} onChange={this.storeInfo} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"dogBreed\">\r\n                            <Form.Control type=\"text\" value={dogBreed} onChange={this.storeInfo}/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"dogAge\">\r\n                            <Form.Control type=\"text\" value={dogAge} onChange={this.storeInfo}/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"firstName\">\r\n                            <Form.Control type=\"text\" value={firstName} onChange={this.storeInfo}/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"lastName\">\r\n                            <Form.Control type=\"text\" value={lastName} onChange={this.storeInfo}/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"bio\">\r\n                            <Form.Control as=\"textarea\" rows=\"3\" value={bio} onChange={this.storeInfo}/>\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"button\" onClick={this.updateInfo}>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                    </Card.Body>\r\n                    <Container>                    \r\n                        <h2>Play date friends</h2>\r\n                    <Table striped bordered hover>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Dog</th>\r\n                            <th>Owner</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {yesData.map(dog=>{\r\n                                return(\r\n                                    <tr key={dog.first+dog.last}>\r\n                                        <td>{dog.dogName}</td>\r\n                                        <td>{dog.first} {dog.last}</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n                    </Container>\r\n                    <Container>                    \r\n                        <h2>Maybe later friends</h2>\r\n                    <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>Dog</th>\r\n                        <th>Owner</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {noData.map(dog=>{\r\n                                return(\r\n                                    <tr key={dog.first+dog.last}>\r\n                                        <td>{dog.dogName}</td>\r\n                                        <td>{dog.first} {dog.last}</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                    </tbody>\r\n                    </Table>\r\n                    </Container>\r\n                </Card>\r\n                \r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile;\r\n\r\n","import React, { Component } from 'react';\r\nimport * as firebase from 'firebase';\r\nimport {Card, Container, Spinner} from 'react-bootstrap'\r\nimport { HashRouter, Route} from 'react-router-dom'\r\nimport Navigation from './Navigation'\r\nimport Footer from './Footer'\r\nimport Profile from './Profile';\r\n\r\nclass Home  extends Component {\r\n    \r\n  state ={\r\n    uFirst: '',\r\n    uLast: '',\r\n    uEmail: '',\r\n    dogAge: '',\r\n    dogBreed: '',\r\n    dogName: '',\r\n    dogTemp:'',\r\n    dogid: '',\r\n    dogimg: null,\r\n    isLoadingInfo: false,\r\n    isLoadingDog: false,\r\n    }\r\n\r\n  // Loads all current api details\r\n  loadApi = e =>{\r\n    if(this.state.isLoadingInfo === false && this.state.isLoadingDog === false){\r\n      this.loadDetailsPerson();\r\n     }\r\n    else if(this.state.isLoadingInfo === true && this.state.isLoadingDog === false){\r\n      this.loadDetailsDog();\r\n    }\r\n  }\r\n\r\n  loadDetailsDname = e =>{\r\n    fetch('https://randomuser.me/api/')\r\n    .then(response => { return response.json() })\r\n    .then(data => {\r\n      let reg =/^[a-zA-Z]+$/;\r\n      if(!reg.test(data.results[0].name.first)){\r\n        this.loadDetailsDname();\r\n      }\r\n      else{\r\n        this.setState({dogName : data.results[0].name.first})\r\n      }\r\n    })\r\n  }\r\n\r\n  loadDetailsPerson = e =>{\r\n    fetch('https://randomuser.me/api/')\r\n    .then(response => { return response.json() })\r\n    .then(data => {\r\n      let reg =/^[a-zA-Z]+$/;\r\n      if(!reg.test(data.results[0].name.first) || !reg.test(data.results[0].name.last)){\r\n        this.loadDetailsPerson();\r\n      }\r\n      else{\r\n        this.setState({uFirst : data.results[0].name.first, uLast : data.results[0].name.last, uEmail : data.results[0].email, isLoadingInfo: true}) \r\n        this.loadDetailsDname();\r\n      }\r\n    })\r\n  }\r\n\r\n  loadDetailsDog = e =>{\r\n    fetch(`https://api.thedogapi.com/v1/breeds/search?q=${this.state.uFirst[0]}`)\r\n    .then(response => { return response.json() })\r\n    .then(data => {\r\n      for (let i = 0; i < data.length; i++) {  \r\n        if(data[i].name[0].toLowerCase() === this.state.uFirst[0].toLowerCase()){\r\n          this.setState({dogBreed : data[i].name, isLoadingDog: true})\r\n          this.setState({dogAge: Math.floor(Math.random() * 10 + 1)})\r\n          this.setState({dogid: data[i].id})\r\n          this.setState({dogTemp: data[i].temperament})\r\n          if(typeof data[i].temperament === 'undefined'){\r\n            this.setState({dogTemp: \"Happy, Loving, Kind\"});\r\n          }\r\n          if(this.state.dogimg === null){\r\n\r\n            fetch(`https://api.thedogapi.com/v1/images/search?breed_ids=${this.state.dogid}`)\r\n            .then(response => { return response.json() })\r\n            .then(info =>{\r\n              if(info.length === 0){\r\n                this.setState({dogimg: \"https://pawedin.com/system/pets/default_images/default_pet.jpg\"})\r\n              }\r\n              else{\r\n                this.setState({dogimg: info[0].url})\r\n              }\r\n            })\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  //Random id for random users being stored\r\n  create_UUID = e =>{\r\n    var dt = new Date().getTime();\r\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n        var r = (dt + Math.random()*16)%16 | 0;\r\n        dt = Math.floor(dt/16);\r\n        return (c==='x' ? r :(r&0x3|0x8)).toString(16);\r\n    });\r\n    return uuid;\r\n  \r\n  }\r\n\r\n  //Add dogs to list to be view on profile later\r\n  yesDogs = e =>{\r\n    let randomId = this.create_UUID();\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n        if (user) {\r\n          firebase.database().ref(`users/${user.uid}/dogdates/${randomId}`).set({\r\n            dogAge: this.state.dogAge,\r\n            dogBreed: this.state.dogBreed,\r\n            dogName: this.state.dogName,\r\n            dogImage: this.state.dogimg,\r\n            dogTemp: this.state.dogTemp,\r\n            email: this.state.uEmail,\r\n            first: this.state.uFirst,\r\n            last: this.state.uLast,\r\n            status: 'yes',\r\n          }); \r\n        }\r\n      });\r\n    this.setState({isLoadingDog: false, isLoadingInfo: false, dogimg: null})\r\n    this.loadApi();\r\n  }\r\n  noDogs = e =>{\r\n    let randomId = this.create_UUID();\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n        if (user) {\r\n          firebase.database().ref(`users/${user.uid}/dogdates/${randomId}`).set({\r\n            dogAge: this.state.dogAge,\r\n            dogBreed: this.state.dogBreed,\r\n            dogName: this.state.dogName,\r\n            dogImage: this.state.dogimg,\r\n            dogTemp: this.state.dogTemp,\r\n            email: this.state.uEmail,\r\n            first: this.state.uFirst,\r\n            last: this.state.uLast,\r\n            status: 'no',\r\n          }); \r\n        }\r\n      });\r\n    this.setState({isLoadingDog: false, isLoadingInfo: false, dogimg: null})\r\n    this.loadApi();\r\n  }\r\n  //store more than 1 user to load data, holder user data in set state along with details of dog you will be viewing\r\n \r\n    render(){\r\n        let { isLoadingInfo, isLoadingDog, uEmail, uFirst, uLast, dogAge, dogBreed, dogName, dogimg, dogTemp } = this.state\r\n\r\n        if(isLoadingDog === false || isLoadingInfo === false ){\r\n          this.loadApi();\r\n        }\r\n    \r\n        if(isLoadingDog === false || isLoadingInfo === false ){\r\n          return( \r\n          <Container>\r\n            <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n          </Spinner>\r\n        </Container>\r\n        )\r\n        }\r\n        else if(isLoadingDog === true && isLoadingInfo === true){\r\n          return(\r\n            <HashRouter>\r\n              <Navigation/>\r\n              <Route exact path=\"/\" render={()=>{\r\n                return(\r\n                  <Container>\r\n                    <Card>\r\n                      <Card.Body>                  \r\n                        <img src={dogimg} alt=\"Dog Img\" height=\"200\" width=\"200\"></img>\r\n                        <p id=\"\">{dogBreed}</p>\r\n                        <p id=\"\">{dogAge}</p>\r\n                        <p>Hello my name is {dogName} and I am {dogTemp}.</p>\r\n                        <p>My owner is called {uFirst} {uLast}.</p>\r\n                        <p>You can contact my owner at {uEmail}.</p>\r\n                        <button onClick={this.yesDogs}>Playdate</button>\r\n                        <button onClick={this.noDogs}>No Thanks</button>\r\n                        </Card.Body>\r\n                    </Card>              \r\n                  </Container>\r\n                  )\r\n              }}/>\r\n              <Route path=\"/profile\" render={()=>{\r\n                return(\r\n                  <Profile/>\r\n\r\n                )\r\n              }}/>\r\n              <Footer/>\r\n              </HashRouter>\r\n          );\r\n        }  \r\n    }\r\n\r\n}\r\n\r\nexport default Home\r\n\r\n","import React, {Component} from 'react';\nimport Home from './components/Home'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\n\n\nclass App extends Component{\n\n\n  render(){\n    return(\n      <div>\n      <Home/>\n      </div>\n    )\n   }\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as firebase from 'firebase';\nimport * as serviceWorker from './serviceWorker';\n\nconst config = {\n    apiKey: \"AIzaSyD2bxg_sJcq3m625n7tDHAp_nkMjGtUdOw\",\n    authDomain: \"dogdata-3200f.firebaseapp.com\",\n    databaseURL: \"https://dogdata-3200f.firebaseio.com\",\n    projectId: \"dogdata-3200f\",\n    storageBucket: \"dogdata-3200f.appspot.com\",\n    messagingSenderId: \"1085718428729\",\n    appId: \"1:1085718428729:web:b95fef7c3f7b8e31\"\n  };\n\nfirebase.initializeApp(config)\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}